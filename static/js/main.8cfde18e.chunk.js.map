{"version":3,"sources":["Todo.js","TodoList.js","Header.js","filters.js","TodosFilter.js","Footer.js","App.js","index.js"],"names":["Todo","todo","deleteTodo","changeTodoStatus","className","onChange","id","type","checked","completed","htmlFor","title","onClick","TodoList","todos","markAll","selectButton","map","key","cn","Header","state","handleInput","event","value","target","setState","trimLeft","sumbmitForm","addTodos","props","preventDefault","reset","prev","onSubmit","this","placeholder","React","Component","FILTERS","TodosFilter","handlerChangeList","handleClearCompleted","href","name","Footer","todosList","filter","length","App","currentFilter","newTodo","todoId","checkCompleted","list","every","x","preparedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cfde18e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo, deleteTodo, changeTodoStatus }) => (\n  <>\n    <div className=\"view\">\n      <input\n        onChange={() => changeTodoStatus(todo.id)}\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        checked={todo.completed}\n      />\n      <label htmlFor={todo.id}>{todo.title}</label>\n      <button\n        onClick={() => deleteTodo(todo.id)}\n        type=\"button\"\n        className=\"destroy\"\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </>\n);\n\nexport default Todo;\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Todo from './Todo';\n\nconst TodoList // linter\n= ({ todos, deleteTodo, changeTodoStatus, markAll, selectButton }) => (\n  <>\n    <form>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={() => markAll()}\n        checked={selectButton}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n      >\n        Mark all as complete\n      </label>\n    </form>\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <li\n          key={todo.id}\n          className={cn({ completed: todo.completed })}\n        >\n          <Todo\n            todo={todo}\n            deleteTodo={deleteTodo}\n            changeTodoStatus={changeTodoStatus}\n\n          />\n        </li>\n      ))\n      }\n    </ul>\n  </>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  markAll: PropTypes.func.isRequired,\n  selectButton: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state= {\n    id: 1,\n    title: '',\n    completed: '',\n  }\n\n  handleInput = (event) => {\n    const { value } = event.target;\n\n    this.setState(state => ({\n      title: value.trimLeft(),\n      completed: false,\n    }));\n  }\n\n  sumbmitForm = (event) => {\n    const { addTodos } = this.props;\n\n    if (this.state.title === '') {\n      return;\n    }\n\n    event.preventDefault();\n    addTodos(this.state);\n    this.reset();\n  }\n\n  reset = () => {\n    this.setState(prev => ({\n      title: '',\n      completed: false,\n      id: prev.id + 1,\n    }));\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.sumbmitForm}>\n          <input\n            onChange={this.handleInput}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.title}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n\nHeader.propTypes = {\n  addTodos: PropTypes.func.isRequired,\n};\n","export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTERS } from './filters';\n\nconst TodosFilter = ({ handlerChangeList, handleClearCompleted }) => (\n  <>\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className=\"selected\"\n          name=\"all\"\n          onClick={() => handlerChangeList(FILTERS.all)}\n        >\n          All\n        </a>\n\n      </li>\n\n      <li>\n        <a\n          name=\"active\"\n          href=\"#/active\"\n          onClick={() => handlerChangeList(FILTERS.active)}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          name=\"completed\"\n          href=\"#/completed\"\n          onClick={() => handlerChangeList(FILTERS.completed)}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={() => handleClearCompleted()}\n    >\n      Clear completed\n    </button>\n  </>\n);\n\nexport default TodosFilter;\n\nTodosFilter.propTypes = {\n  handlerChangeList: PropTypes.func.isRequired,\n  handleClearCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from './TodosFilter';\n\nconst Footer = ({ todosList, handleClearCompleted, handlerChangeList }) => (\n  <>\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${todosList.filter(todo => !todo.completed).length} items left`}\n\n      </span>\n      <TodosFilter\n        handlerChangeList={handlerChangeList}\n        handleClearCompleted={handleClearCompleted}\n      />\n    </footer>\n\n  </>\n);\n\nexport default Footer;\n\nFooter.propTypes = {\n  todosList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handlerChangeList: PropTypes.func.isRequired,\n  handleClearCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Header from './Header';\nimport { FILTERS } from './filters';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  state= {\n    todosList: [],\n    currentFilter: FILTERS.all,\n  }\n\n  addTodos = (newTodo) => {\n    this.setState(prev => (\n      { todosList: [...prev.todosList, newTodo] }\n    ));\n  }\n\n  deleteTodo = (todoId) => {\n    this.setState(({ todosList }) => ({\n      todosList: todosList.filter(({ id }) => id !== todoId),\n    }));\n  }\n\n  checkCompleted = list => list.every(x => x.completed === true)\n\n  markAll = () => {\n    this.setState(state => ({\n      todosList: state.todosList.map((todo) => {\n        if (this.checkCompleted(state.todosList)) {\n          return {\n            ...todo,\n            completed: false,\n          };\n        }\n\n        return {\n          ...todo,\n          completed: true,\n        };\n      }),\n    }));\n  }\n\n  handleClearCompleted = () => {\n    this.setState(({ todosList }) => ({\n      todosList: todosList.filter(({ completed }) => !completed),\n    }));\n  }\n\n  changeTodoStatus = (todoId) => {\n    this.setState(state => ({\n      todosList: state.todosList.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  }\n\n  handlerChangeList = (name) => {\n    this.setState({\n      currentFilter: name,\n    });\n  }\n\n  render() {\n    const { todosList, currentFilter } = this.state;\n\n    let preparedTodo = todosList;\n    let selectButton;\n\n    if (this.checkCompleted(todosList) && todosList.length > 0) {\n      selectButton = true;\n    } else {\n      selectButton = false;\n    }\n\n    if (currentFilter === FILTERS.active) {\n      preparedTodo = preparedTodo.filter(todo => !todo.completed);\n    }\n\n    if (currentFilter === FILTERS.completed) {\n      preparedTodo = preparedTodo.filter(todo => todo.completed);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodos={this.addTodos} />\n\n        <section className=\"main\">\n\n          <TodoList\n            todos={preparedTodo}\n            deleteTodo={this.deleteTodo}\n            changeTodoStatus={this.changeTodoStatus}\n            markAll={this.markAll}\n            selectButton={selectButton}\n          />\n        </section>\n        <Footer\n          todosList={todosList}\n          handlerChangeList={this.handlerChangeList}\n          handleClearCompleted={this.handleClearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}