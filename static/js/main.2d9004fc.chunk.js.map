{"version":3,"sources":["Todo.js","TodoList.js","Header.js","filters.js","TodosFilter.js","Footer.js","App.js","index.js"],"names":["Todo","state","title","edit","activateEditing","setState","props","todo","handlerChange","target","value","completeEdit","escapeEditing","e","keyCode","this","changeTodoStatus","deleteTodo","editTodo","className","cn","editing","completed","onChange","onBlur","onKeyDown","id","autoFocus","type","checked","onDoubleClick","onClick","React","Component","TodoList","selectAllButton","markAll","todos","hideOnStart","htmlFor","map","key","Header","handleInput","event","trimLeft","sumbmitForm","addTodos","preventDefault","reset","prev","onSubmit","placeholder","FILTERS","TodosFilter","handlerChangeList","handleClearCompleted","currentFilter","hideClearButton","href","name","Footer","todosList","filter","length","App","newTodo","todoId","todoTitle","checkCompleted","list","every","x","preparedTodo","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d9004fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nclass Todo extends React.Component {\n  state = {\n    title: '',\n    edit: false,\n  }\n\n  activateEditing =() => {\n    this.setState(state => ({\n      title: this.props.todo.title,\n      edit: !state.edit,\n    }));\n  }\n\n  handlerChange =({ target }) => {\n    this.setState({\n      title: target.value,\n    });\n  }\n\n  completeEdit = () => {\n    this.setState(state => ({\n      edit: false,\n    }));\n  }\n\n  escapeEditing = (e) => {\n    if (e.keyCode === 13 || e.keyCode === 27) {\n      this.setState({\n        edit: false,\n      });\n    }\n  }\n\n  render() {\n    const { todo,\n      changeTodoStatus,\n      deleteTodo,\n      editTodo } = this.props;\n\n    const { title, edit } = this.state;\n\n    return (\n      <li\n        className={cn({\n          editing: edit, completed: todo.completed,\n        })}\n      >\n        {edit\n          ? (\n            <>\n              <input\n                onChange={this.handlerChange}\n                onBlur={this.completeEdit}\n                className=\"edit\"\n                value={title}\n                onKeyDown={e => editTodo(e, todo.id, title, this.escapeEditing)}\n                // лінтер свариться на autoFocus;\n                // eslint-disable-next-line jsx-a11y/no-autofocus\n                autoFocus\n              />\n            </>\n          )\n\n          : (\n            <div className=\"view\">\n              <input\n                onChange={() => changeTodoStatus(todo.id)}\n                type=\"checkbox\"\n                className=\"toggle\"\n                id={todo.id}\n                checked={todo.completed}\n              />\n              <label\n                onDoubleClick={this.activateEditing}\n              >\n                {todo.title}\n              </label>\n              <button\n                onClick={() => deleteTodo(todo.id)}\n                type=\"button\"\n                className=\"destroy\"\n              />\n            </div>\n          )}\n      </li>\n    );\n  }\n}\n\nexport default Todo;\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Todo from './Todo';\n\nconst TodoList = (props) => {\n  const { selectAllButton,\n    markAll,\n    todos,\n    deleteTodo,\n    editTodo,\n    changeTodoStatus,\n    hideOnStart } = props;\n\n  return (\n    <>\n      {hideOnStart && (\n        <form>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={() => markAll()}\n            checked={selectAllButton}\n          />\n          <label\n            htmlFor=\"toggle-all\"\n          >\n            Mark all as complete\n          </label>\n        </form>\n      )}\n\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <Todo\n            key={todo.id}\n            todo={todo}\n            deleteTodo={deleteTodo}\n            changeTodoStatus={changeTodoStatus}\n            editTodo={editTodo}\n          />\n        ))\n        }\n      </ul>\n    </>\n  );\n};\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  markAll: PropTypes.func.isRequired,\n  selectAllButton: PropTypes.bool.isRequired,\n  hideOnStart: PropTypes.bool.isRequired,\n  editTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state= {\n    id: 1,\n    title: '',\n    completed: '',\n  }\n\n  handleInput = (event) => {\n    const { value } = event.target;\n\n    this.setState(state => ({\n      title: value.trimLeft(),\n      completed: false,\n    }));\n  }\n\n  sumbmitForm = (event) => {\n    const { addTodos } = this.props;\n\n    event.preventDefault();\n    if (this.state.title === '') {\n      return;\n    }\n\n    addTodos(this.state);\n    this.reset();\n  }\n\n  reset = () => {\n    this.setState(prev => ({\n      title: '',\n      completed: false,\n      id: prev.id + 1,\n    }));\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.sumbmitForm}>\n          <input\n            onChange={this.handleInput}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={this.state.title}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n\nHeader.propTypes = {\n  addTodos: PropTypes.func.isRequired,\n};\n","export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FILTERS } from './filters';\n\nconst TodosFilter = (props) => {\n  const { handlerChangeList,\n    handleClearCompleted,\n    currentFilter,\n    hideClearButton } = props;\n\n  return (\n\n    <>\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={currentFilter === FILTERS.all && 'selected'}\n            name=\"all\"\n            onClick={() => handlerChangeList(FILTERS.all)}\n          >\n            All\n          </a>\n\n        </li>\n\n        <li>\n          <a\n            className={currentFilter === FILTERS.active ? 'selected' : ''}\n            name=\"active\"\n            href=\"#/active\"\n            onClick={() => handlerChangeList(FILTERS.active)}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            className={currentFilter === FILTERS.completed ? 'selected' : ''}\n            name=\"completed\"\n            href=\"#/completed\"\n            onClick={() => handlerChangeList(FILTERS.completed)}\n          >\n            Completed\n          </a>\n        </li>\n\n      </ul>\n      {hideClearButton && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => handleClearCompleted()}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </>\n  );\n};\n\nexport default TodosFilter;\n\nTodosFilter.propTypes = {\n  handlerChangeList: PropTypes.func.isRequired,\n  handleClearCompleted: PropTypes.func.isRequired,\n  currentFilter: PropTypes.string.isRequired,\n  hideClearButton: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodosFilter from './TodosFilter';\n\nconst Footer = (props) => {\n  const { todosList,\n    handleClearCompleted,\n    handlerChangeList,\n    currentFilter,\n    hideClearButton } = props;\n\n  return (\n    <>\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {`${todosList.filter(todo => !todo.completed).length} items left`}\n\n        </span>\n        <TodosFilter\n          currentFilter={currentFilter}\n          handlerChangeList={handlerChangeList}\n          handleClearCompleted={handleClearCompleted}\n          hideClearButton={hideClearButton}\n        />\n      </footer>\n\n    </>\n  );\n};\n\nexport default Footer;\n\nFooter.propTypes = {\n  todosList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handlerChangeList: PropTypes.func.isRequired,\n  handleClearCompleted: PropTypes.func.isRequired,\n  currentFilter: PropTypes.string.isRequired,\n  hideClearButton: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Header from './Header';\nimport { FILTERS } from './filters';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  state= {\n    todosList: [],\n    currentFilter: FILTERS.all,\n  }\n\n  addTodos = (newTodo) => {\n    this.setState(prev => (\n      { todosList: [...prev.todosList, newTodo] }\n    ));\n  }\n\n  editTodo = (target, todoId, todoTitle, escapeEditing) => {\n    if (target.keyCode === 13 && todoTitle !== '') {\n      this.setState(({ todosList }) => ({\n        todosList: todosList.map((todo) => {\n          if (todo.id === todoId) {\n            return {\n              ...todo, title: todoTitle,\n            };\n          }\n\n          return todo;\n        }),\n      }));\n    }\n\n    escapeEditing(target);\n  }\n\n  deleteTodo = (todoId) => {\n    this.setState(({ todosList }) => ({\n      todosList: todosList.filter(({ id }) => id !== todoId),\n    }));\n  }\n\n  checkCompleted = list => list.every(x => x.completed === true)\n\n  markAll = () => {\n    this.setState(state => ({\n      todosList: state.todosList.map((todo) => {\n        if (this.checkCompleted(state.todosList)) {\n          return {\n            ...todo,\n            completed: false,\n          };\n        }\n\n        return {\n          ...todo,\n          completed: true,\n        };\n      }),\n    }));\n  }\n\n  handleClearCompleted = () => {\n    this.setState(({ todosList }) => ({\n      todosList: todosList.filter(({ completed }) => !completed),\n    }));\n  }\n\n  changeTodoStatus = (todoId) => {\n    this.setState(state => ({\n      todosList: state.todosList.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  }\n\n  handlerChangeList = (name) => {\n    this.setState({\n      currentFilter: name,\n    });\n  }\n\n  render() {\n    const { todosList, currentFilter } = this.state;\n\n    let preparedTodo = todosList;\n    let selectAllButton;\n    let hideOnStart;\n    const hideClearButton = todosList.some(todo => todo.completed === true);\n\n    todosList.length > 0 ? hideOnStart = true : hideOnStart = false;\n\n    if (this.checkCompleted(todosList) && todosList.length > 0) {\n      selectAllButton = true;\n    } else {\n      selectAllButton = false;\n    }\n\n    if (currentFilter === FILTERS.active) {\n      preparedTodo = preparedTodo.filter(todo => !todo.completed);\n    }\n\n    if (currentFilter === FILTERS.completed) {\n      preparedTodo = preparedTodo.filter(todo => todo.completed);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTodos={this.addTodos} />\n\n        <section className=\"main\">\n\n          <TodoList\n            todos={preparedTodo}\n            deleteTodo={this.deleteTodo}\n            editTodo={this.editTodo}\n            changeTodoStatus={this.changeTodoStatus}\n            markAll={this.markAll}\n            selectAllButton={selectAllButton}\n            hideOnStart={hideOnStart}\n          />\n        </section>\n        {hideOnStart && (\n          <Footer\n            todosList={todosList}\n            hideClearButton={hideClearButton}\n            currentFilter={currentFilter}\n            handlerChangeList={this.handlerChangeList}\n            handleClearCompleted={this.handleClearCompleted}\n          />\n        )}\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}